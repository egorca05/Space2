#include "header.h"
#include "Labyrint.h"
#include "MyFunction.h"

using namespace std;

const int nL = 32;   //колво строк
const int nC = 32;   //колво столбцов лабиринта

UINT map[nL] = {
 0b1101'1111'1111'1111'1111'1111'1111'1111,//1
 0b1101'1100'0000'1111'1110'1000'0001'1001,
 0b1100'0001'1110'0000'0000'0011'1101'1011,//3
 0b1001'1111'1110'1111'1111'1011'1100'0011,
 0b1111'1111'1111'1111'1111'1011'1101'1111,//5
 0b1111'1111'1110'0000'0011'1011'0001'1111,
 0b1111'1111'1110'1111'1000'0011'0111'1111,//7
 0b1111'1111'1110'1111'1111'1111'0111'1111,
 0b1100'0000'0000'1100'0000'0000'0111'1000,  //9
 0b1111'0111'1111'1111'1011'1111'1110'0011,
 0b1000'0111'0000'0000'0011'1111'1110'1111, //11
 0b1110'1111'1101'1101'1111'1111'1110'1111,
 0b1110'1110'0001'1101'1111'1111'0000'1111, //13
 0b1110'1100'1111'0000'0111'1000'0111'1111,
 0b1110'0001'1111'1111'1111'1011'1111'1111, //15
 0b1111'1101'1100'0000'0111'1011'1111'1111,
 0b1100'0001'1101'1111'0111'1011'1111'1111, //17
 0b1101'1111'0001'1111'0111'1011'1111'1111,
 0b1100'0000'0000'1111'0000'0000'0000'1111, //19
 0b1101'1111'1111'1111'0111'1111'1111'1111,
 0b1100'0011'1111'1111'0111'1111'1111'1111,//21
 0b1111'1011'1110'0000'0001'1111'1101'1111,
 0b1111'1011'1111'1011'1011'1111'0000'1111,//23
 0b1100'0011'1111'1011'1111'1000'0111'1111,
 0b1101'1111'1000'0000'0111'1011'1111'1111,//25
 0b1101'1111'1011'1111'1111'1011'1111'1111,
 0b1101'1111'1011'1111'1111'1011'1111'1111,//27
 0b1101'1110'0000'0000'1111'0000'0001'1111,
 0b1100'0000'1111'1110'0000'0111'1101'1111,//29
 0b1111'0111'1111'1111'1111'1100'0000'0001,
 0b1111'0000'0000'0000'0000'0000'0111'1111,//31
 0b1111'1111'1111'1111'1111'1111'1111'1111
};

UINT nbit = 0b1000'0000'0000'0000'0000'0000'0000'0000;
COLORS nCLRS = CL_LIGHT_CYAN, nCLRE = CL_LIGHT_GREEN;
UINT nSRow = 0, nSCol = 2;                             //Старт, вход в лабиринт, координата
UINT nERow = 8, nECol = 31;                           //Выход из лабиринта, координата
UINT nRow = nSRow, nCol = nSCol;                       //Текущая позиция жука в лабиринте

void MenuLabyrint() {
    Uchar ch = 0;
    do {
        CLS;
        SetTextColor(CL_LIGHT_RED);
        cout << "Меню Лабиринта:\n";
        SetColor();
        cout << "1 - Лабиринт\n";
        cout << "ESC - Выход из программы\n";
        SetTextColor(CL_LIGHT_YELLOW);
        cout << "Выберите пункт меню\n";
        SetColor();

        ch = _getch();
        switch (ch) {
        case '1': Labyrint(); break;
        case '2':  break;
        }
    } while (ch != 27);
}

void Labyrint() {
    UCHAR ch = 0;
    CLS;
    for (int i = 0; i < nL; i++) {
        for (int j = 0; j < nC; j++) {
            if (map[i] & (nbit >> j)) {            //стена
                SetColor(СВ_БЕЛЫЙ);
                cout << "ШШ";
            }
            else                                  //проход
            {
                if ((i == nSRow) && (j == nSCol)) SetColor(nCLRS);
                else if ((i == nERow) && (j == nECol))SetColor(nCLRE);
                else DefColor;

                //if ((i == nRow) && (j == nCol)) {
                 //SetColor(CL_LIGHT_RED);
                 //cout << "ЖЖ";
                //}
                //else 
                cout << "  ";
            }
        }
        cout << endl;
    }
    do {
        SetCursor(nRow, nCol * 2);
        SetColor(CL_LIGHT_RED);
        cout << "ЖЖ";

        ch = _getch();

        SetCursor(nRow, nCol * 2);
        SetColor();
        cout << "  ";

        switch (ch) {
            //case 0:
        case 224:
            ch = _getch();
            switch (ch) {
            case 72: if ((nRow == 0) || (map[nRow - 1] & (nbit >> nCol))) SONG; else nRow--; break; //вверх
            case 75: if ((nCol == 0) || (map[nRow] & (nbit >> (nCol - 1)))) SONG; else nCol--; break; //влево
            case 77: if (((nCol + 1) == nC) || (map[nRow] & (nbit >> (nCol + 1)))) SONG; else nCol++; break; //вправо
            case 80: if (((nRow + 1) == nL) || (map[nRow + 1] & (nbit >> nCol))) SONG; else nRow++; break; //вниз
            }
        }
    } while (!((nRow == nERow) && (nCol == nECol)) && (ch != 27));

    PAUSE;
}